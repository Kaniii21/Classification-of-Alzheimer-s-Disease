{"ast":null,"code":"import React,{useState}from'react';import'./ModelComparisonPage.css';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';// Register the components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function ModelComparisonPage(){// State to track which metric is being viewed\nconst[activeMetric,setActiveMetric]=useState('accuracy');// Mock model comparison data\nconst modelData={models:['Random Forest','Logistic Regression','SVM','KNN'],metrics:{accuracy:[0.862,0.839,0.814,0.791],precision:[0.871,0.852,0.829,0.804],recall:[0.835,0.818,0.791,0.773],f1:[0.853,0.834,0.810,0.788]}};// Function to format labels with proper capitalization\nconst formatMetricLabel=metric=>{switch(metric){case'f1':return'F1 Score';default:return metric.charAt(0).toUpperCase()+metric.slice(1);}};// Prepare bar chart data for the selected metric\nconst barChartData={labels:modelData.models,datasets:[{label:formatMetricLabel(activeMetric),data:modelData.metrics[activeMetric],backgroundColor:['rgba(63, 81, 181, 0.7)','rgba(245, 0, 87, 0.7)','rgba(76, 175, 80, 0.7)','rgba(255, 152, 0, 0.7)'],borderColor:['rgba(63, 81, 181, 1)','rgba(245, 0, 87, 1)','rgba(76, 175, 80, 1)','rgba(255, 152, 0, 1)'],borderWidth:1}]};const barChartOptions={responsive:true,plugins:{legend:{display:false},title:{display:true,text:\"Model Performance: \".concat(formatMetricLabel(activeMetric)),font:{size:16,weight:'bold'}}},scales:{y:{beginAtZero:false,min:Math.min(...modelData.metrics[activeMetric])-0.05,max:1,ticks:{callback:function(value){return(value*100).toFixed(0)+'%';}}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"model-comparison-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Model Comparison\"}),/*#__PURE__*/_jsx(\"p\",{className:\"model-intro\",children:\"Compare the performance of different machine learning models used for Alzheimer's disease classification.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-selector\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select a metric to compare:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"metric-button \".concat(activeMetric==='accuracy'?'active':''),onClick:()=>setActiveMetric('accuracy'),children:\"Accuracy\"}),/*#__PURE__*/_jsx(\"button\",{className:\"metric-button \".concat(activeMetric==='precision'?'active':''),onClick:()=>setActiveMetric('precision'),children:\"Precision\"}),/*#__PURE__*/_jsx(\"button\",{className:\"metric-button \".concat(activeMetric==='recall'?'active':''),onClick:()=>setActiveMetric('recall'),children:\"Recall\"}),/*#__PURE__*/_jsx(\"button\",{className:\"metric-button \".concat(activeMetric==='f1'?'active':''),onClick:()=>setActiveMetric('f1'),children:\"F1 Score\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"model-summary-chart\",children:/*#__PURE__*/_jsx(Bar,{data:barChartData,options:barChartOptions})})}),/*#__PURE__*/_jsx(\"div\",{className:\"model-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Model Descriptions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"model-description-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Random Forest\"}),/*#__PURE__*/_jsx(\"p\",{children:\"An ensemble learning method that constructs multiple decision trees during training and outputs the class that is the mode of the classes from individual trees.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Best for handling complex, non-linear relationships in the data.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"model-description-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Logistic Regression\"}),/*#__PURE__*/_jsx(\"p\",{children:\"A statistical model that uses a logistic function to model a binary dependent variable, offering good interpretability.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Works well with linearly separable data and provides clear feature importance.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"model-description-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Support Vector Machine (SVM)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Finds the hyperplane that best divides a dataset into classes, maximizing the margin between classes.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Effective in high-dimensional spaces and versatile through different kernel functions.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"model-description-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"K-Nearest Neighbors (KNN)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Classifies new cases based on a similarity measure to the K most similar training examples.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Simple to implement and naturally handles multi-class cases.\"})]})]})})]});}export default ModelComparisonPage;","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ModelComparisonPage","activeMetric","setActiveMetric","modelData","models","metrics","accuracy","precision","recall","f1","formatMetricLabel","metric","charAt","toUpperCase","slice","barChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","barChartOptions","responsive","plugins","legend","display","title","text","concat","font","size","weight","scales","y","beginAtZero","min","Math","max","ticks","callback","value","toFixed","className","children","onClick","options"],"sources":["D:/projects/Classification-of-Alzheimer-s-Disease/frontend/src/components/ModelComparisonPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ModelComparisonPage.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction ModelComparisonPage() {\r\n  // State to track which metric is being viewed\r\n  const [activeMetric, setActiveMetric] = useState('accuracy');\r\n  \r\n  // Mock model comparison data\r\n  const modelData = {\r\n    models: ['Random Forest', 'Logistic Regression', 'SVM', 'KNN'],\r\n    metrics: {\r\n      accuracy: [0.862, 0.839, 0.814, 0.791],\r\n      precision: [0.871, 0.852, 0.829, 0.804],\r\n      recall: [0.835, 0.818, 0.791, 0.773],\r\n      f1: [0.853, 0.834, 0.810, 0.788]\r\n    }\r\n  };\r\n\r\n  // Function to format labels with proper capitalization\r\n  const formatMetricLabel = (metric) => {\r\n    switch(metric) {\r\n      case 'f1': return 'F1 Score';\r\n      default: return metric.charAt(0).toUpperCase() + metric.slice(1);\r\n    }\r\n  };\r\n\r\n  // Prepare bar chart data for the selected metric\r\n  const barChartData = {\r\n    labels: modelData.models,\r\n    datasets: [\r\n      {\r\n        label: formatMetricLabel(activeMetric),\r\n        data: modelData.metrics[activeMetric],\r\n        backgroundColor: [\r\n          'rgba(63, 81, 181, 0.7)',\r\n          'rgba(245, 0, 87, 0.7)',\r\n          'rgba(76, 175, 80, 0.7)',\r\n          'rgba(255, 152, 0, 0.7)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(63, 81, 181, 1)',\r\n          'rgba(245, 0, 87, 1)',\r\n          'rgba(76, 175, 80, 1)',\r\n          'rgba(255, 152, 0, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Model Performance: ${formatMetricLabel(activeMetric)}`,\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        min: Math.min(...modelData.metrics[activeMetric]) - 0.05,\r\n        max: 1,\r\n        ticks: {\r\n          callback: function(value) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-comparison-page\">\r\n      <h2>Model Comparison</h2>\r\n      <p className=\"model-intro\">\r\n        Compare the performance of different machine learning models used for Alzheimer's disease classification.\r\n      </p>\r\n\r\n      <div className=\"metric-selector\">\r\n        <p>Select a metric to compare:</p>\r\n        <div className=\"metric-buttons\">\r\n          <button \r\n            className={`metric-button ${activeMetric === 'accuracy' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('accuracy')}\r\n          >\r\n            Accuracy\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'precision' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('precision')}\r\n          >\r\n            Precision\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'recall' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('recall')}\r\n          >\r\n            Recall\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'f1' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('f1')}\r\n          >\r\n            F1 Score\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"model-summary-chart\">\r\n          <Bar data={barChartData} options={barChartOptions} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"model-details\">\r\n        <div className=\"card\">\r\n          <h3>Model Descriptions</h3>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Random Forest</h4>\r\n            <p>An ensemble learning method that constructs multiple decision trees during training and outputs the class that is the mode of the classes from individual trees.</p>\r\n            <p>Best for handling complex, non-linear relationships in the data.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Logistic Regression</h4>\r\n            <p>A statistical model that uses a logistic function to model a binary dependent variable, offering good interpretability.</p>\r\n            <p>Works well with linearly separable data and provides clear feature importance.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Support Vector Machine (SVM)</h4>\r\n            <p>Finds the hyperplane that best divides a dataset into classes, maximizing the margin between classes.</p>\r\n            <p>Effective in high-dimensional spaces and versatile through different kernel functions.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>K-Nearest Neighbors (KNN)</h4>\r\n            <p>Classifies new cases based on a similarity measure to the K most similar training examples.</p>\r\n            <p>Simple to implement and naturally handles multi-class cases.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelComparisonPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}