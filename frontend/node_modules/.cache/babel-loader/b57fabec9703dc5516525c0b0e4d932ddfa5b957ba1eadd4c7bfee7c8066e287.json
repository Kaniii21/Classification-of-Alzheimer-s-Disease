{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Classification-of-Alzheimer-s-Disease\\\\frontend\\\\src\\\\components\\\\DashboardStats.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './DashboardStats.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction DashboardStats({\n  stats\n}) {\n  // Prepare data for the chart\n  const chartData = {\n    labels: ['Logistic Regression', 'Random Forest', 'SVM', 'KNN'],\n    datasets: [{\n      label: 'Accuracy',\n      data: [stats.algorithmsComparison.logisticRegression, stats.algorithmsComparison.randomForest, stats.algorithmsComparison.svm, stats.algorithmsComparison.knn],\n      backgroundColor: ['rgba(63, 81, 181, 0.7)', 'rgba(245, 0, 87, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 152, 0, 0.7)'],\n      borderColor: ['rgba(63, 81, 181, 1)', 'rgba(245, 0, 87, 1)', 'rgba(76, 175, 80, 1)', 'rgba(255, 152, 0, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Model Accuracy Comparison'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        min: 0.7,\n        max: 0.9,\n        ticks: {\n          callback: function (value) {\n            return (value * 100).toFixed(0) + '%';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.totalPredictions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.accuracyRate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Accuracy Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.featuresUsed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Features Used\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-footer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/models\",\n        className: \"view-all-link\",\n        children: \"View Detailed Model Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c = DashboardStats;\nexport default DashboardStats;\nvar _c;\n$RefreshReg$(_c, \"DashboardStats\");","map":{"version":3,"names":["React","Link","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DashboardStats","stats","chartData","labels","datasets","label","data","algorithmsComparison","logisticRegression","randomForest","svm","knn","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","display","title","text","scales","y","beginAtZero","min","max","ticks","callback","value","toFixed","className","children","totalPredictions","fileName","_jsxFileName","lineNumber","columnNumber","accuracyRate","featuresUsed","options","to","_c","$RefreshReg$"],"sources":["D:/projects/Classification-of-Alzheimer-s-Disease/frontend/src/components/DashboardStats.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './DashboardStats.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction DashboardStats({ stats }) {\r\n  // Prepare data for the chart\r\n  const chartData = {\r\n    labels: ['Logistic Regression', 'Random Forest', 'SVM', 'KNN'],\r\n    datasets: [\r\n      {\r\n        label: 'Accuracy',\r\n        data: [\r\n          stats.algorithmsComparison.logisticRegression,\r\n          stats.algorithmsComparison.randomForest,\r\n          stats.algorithmsComparison.svm,\r\n          stats.algorithmsComparison.knn\r\n        ],\r\n        backgroundColor: [\r\n          'rgba(63, 81, 181, 0.7)',\r\n          'rgba(245, 0, 87, 0.7)',\r\n          'rgba(76, 175, 80, 0.7)',\r\n          'rgba(255, 152, 0, 0.7)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(63, 81, 181, 1)',\r\n          'rgba(245, 0, 87, 1)',\r\n          'rgba(76, 175, 80, 1)',\r\n          'rgba(255, 152, 0, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Model Accuracy Comparison',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        min: 0.7,\r\n        max: 0.9,\r\n        ticks: {\r\n          callback: function(value) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-stats\">\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-value\">{stats.totalPredictions}</div>\r\n          <div className=\"stat-label\">Total Predictions</div>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-value\">{stats.accuracyRate}</div>\r\n          <div className=\"stat-label\">Accuracy Rate</div>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-value\">{stats.featuresUsed}</div>\r\n          <div className=\"stat-label\">Features Used</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-container\">\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n\r\n      <div className=\"stats-footer\">\r\n        <Link to=\"/models\" className=\"view-all-link\">\r\n          View Detailed Model Comparison\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}