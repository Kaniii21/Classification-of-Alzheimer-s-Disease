{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Classification-of-Alzheimer-s-Disease\\\\frontend\\\\src\\\\components\\\\ModelComparisonPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ModelComparisonPage.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction ModelComparisonPage() {\n  _s();\n  // State to track which metric is being viewed\n  const [activeMetric, setActiveMetric] = useState('accuracy');\n\n  // Mock model comparison data\n  const modelData = {\n    models: ['Random Forest', 'Logistic Regression', 'SVM', 'KNN'],\n    metrics: {\n      accuracy: [0.862, 0.839, 0.814, 0.791],\n      precision: [0.871, 0.852, 0.829, 0.804],\n      recall: [0.835, 0.818, 0.791, 0.773],\n      f1: [0.853, 0.834, 0.810, 0.788]\n    }\n  };\n\n  // Function to format labels with proper capitalization\n  const formatMetricLabel = metric => {\n    switch (metric) {\n      case 'f1':\n        return 'F1 Score';\n      default:\n        return metric.charAt(0).toUpperCase() + metric.slice(1);\n    }\n  };\n\n  // Prepare bar chart data for the selected metric\n  const barChartData = {\n    labels: modelData.models,\n    datasets: [{\n      label: formatMetricLabel(activeMetric),\n      data: modelData.metrics[activeMetric],\n      backgroundColor: ['rgba(63, 81, 181, 0.7)', 'rgba(245, 0, 87, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 152, 0, 0.7)'],\n      borderColor: ['rgba(63, 81, 181, 1)', 'rgba(245, 0, 87, 1)', 'rgba(76, 175, 80, 1)', 'rgba(255, 152, 0, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const barChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Model Performance: ${formatMetricLabel(activeMetric)}`,\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        min: Math.min(...modelData.metrics[activeMetric]) - 0.05,\n        max: 1,\n        ticks: {\n          callback: function (value) {\n            return (value * 100).toFixed(0) + '%';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-comparison-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Model Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"model-intro\",\n      children: \"Compare the performance of different machine learning models used for Alzheimer's disease classification.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a metric to compare:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `metric-button ${activeMetric === 'accuracy' ? 'active' : ''}`,\n          onClick: () => setActiveMetric('accuracy'),\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `metric-button ${activeMetric === 'precision' ? 'active' : ''}`,\n          onClick: () => setActiveMetric('precision'),\n          children: \"Precision\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `metric-button ${activeMetric === 'recall' ? 'active' : ''}`,\n          onClick: () => setActiveMetric('recall'),\n          children: \"Recall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `metric-button ${activeMetric === 'f1' ? 'active' : ''}`,\n          onClick: () => setActiveMetric('f1'),\n          children: \"F1 Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-summary-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          options: barChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-details\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Model Descriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-description-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Random Forest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"An ensemble learning method that constructs multiple decision trees during training and outputs the class that is the mode of the classes from individual trees.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Best for handling complex, non-linear relationships in the data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-description-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Logistic Regression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"A statistical model that uses a logistic function to model a binary dependent variable, offering good interpretability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Works well with linearly separable data and provides clear feature importance.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-description-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Support Vector Machine (SVM)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Finds the hyperplane that best divides a dataset into classes, maximizing the margin between classes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Effective in high-dimensional spaces and versatile through different kernel functions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-description-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"K-Nearest Neighbors (KNN)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Classifies new cases based on a similarity measure to the K most similar training examples.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Simple to implement and naturally handles multi-class cases.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelComparisonPage, \"i8fLOaH8XiRdFr5StjXvlTsAK5M=\");\n_c = ModelComparisonPage;\nexport default ModelComparisonPage;\nvar _c;\n$RefreshReg$(_c, \"ModelComparisonPage\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ModelComparisonPage","_s","activeMetric","setActiveMetric","modelData","models","metrics","accuracy","precision","recall","f1","formatMetricLabel","metric","charAt","toUpperCase","slice","barChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","barChartOptions","responsive","plugins","legend","display","title","text","font","size","weight","scales","y","beginAtZero","min","Math","max","ticks","callback","value","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","_c","$RefreshReg$"],"sources":["D:/projects/Classification-of-Alzheimer-s-Disease/frontend/src/components/ModelComparisonPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ModelComparisonPage.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction ModelComparisonPage() {\r\n  // State to track which metric is being viewed\r\n  const [activeMetric, setActiveMetric] = useState('accuracy');\r\n  \r\n  // Mock model comparison data\r\n  const modelData = {\r\n    models: ['Random Forest', 'Logistic Regression', 'SVM', 'KNN'],\r\n    metrics: {\r\n      accuracy: [0.862, 0.839, 0.814, 0.791],\r\n      precision: [0.871, 0.852, 0.829, 0.804],\r\n      recall: [0.835, 0.818, 0.791, 0.773],\r\n      f1: [0.853, 0.834, 0.810, 0.788]\r\n    }\r\n  };\r\n\r\n  // Function to format labels with proper capitalization\r\n  const formatMetricLabel = (metric) => {\r\n    switch(metric) {\r\n      case 'f1': return 'F1 Score';\r\n      default: return metric.charAt(0).toUpperCase() + metric.slice(1);\r\n    }\r\n  };\r\n\r\n  // Prepare bar chart data for the selected metric\r\n  const barChartData = {\r\n    labels: modelData.models,\r\n    datasets: [\r\n      {\r\n        label: formatMetricLabel(activeMetric),\r\n        data: modelData.metrics[activeMetric],\r\n        backgroundColor: [\r\n          'rgba(63, 81, 181, 0.7)',\r\n          'rgba(245, 0, 87, 0.7)',\r\n          'rgba(76, 175, 80, 0.7)',\r\n          'rgba(255, 152, 0, 0.7)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(63, 81, 181, 1)',\r\n          'rgba(245, 0, 87, 1)',\r\n          'rgba(76, 175, 80, 1)',\r\n          'rgba(255, 152, 0, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Model Performance: ${formatMetricLabel(activeMetric)}`,\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        min: Math.min(...modelData.metrics[activeMetric]) - 0.05,\r\n        max: 1,\r\n        ticks: {\r\n          callback: function(value) {\r\n            return (value * 100).toFixed(0) + '%';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-comparison-page\">\r\n      <h2>Model Comparison</h2>\r\n      <p className=\"model-intro\">\r\n        Compare the performance of different machine learning models used for Alzheimer's disease classification.\r\n      </p>\r\n\r\n      <div className=\"metric-selector\">\r\n        <p>Select a metric to compare:</p>\r\n        <div className=\"metric-buttons\">\r\n          <button \r\n            className={`metric-button ${activeMetric === 'accuracy' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('accuracy')}\r\n          >\r\n            Accuracy\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'precision' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('precision')}\r\n          >\r\n            Precision\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'recall' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('recall')}\r\n          >\r\n            Recall\r\n          </button>\r\n          <button \r\n            className={`metric-button ${activeMetric === 'f1' ? 'active' : ''}`}\r\n            onClick={() => setActiveMetric('f1')}\r\n          >\r\n            F1 Score\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"model-summary-chart\">\r\n          <Bar data={barChartData} options={barChartOptions} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"model-details\">\r\n        <div className=\"card\">\r\n          <h3>Model Descriptions</h3>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Random Forest</h4>\r\n            <p>An ensemble learning method that constructs multiple decision trees during training and outputs the class that is the mode of the classes from individual trees.</p>\r\n            <p>Best for handling complex, non-linear relationships in the data.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Logistic Regression</h4>\r\n            <p>A statistical model that uses a logistic function to model a binary dependent variable, offering good interpretability.</p>\r\n            <p>Works well with linearly separable data and provides clear feature importance.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>Support Vector Machine (SVM)</h4>\r\n            <p>Finds the hyperplane that best divides a dataset into classes, maximizing the margin between classes.</p>\r\n            <p>Effective in high-dimensional spaces and versatile through different kernel functions.</p>\r\n          </div>\r\n          \r\n          <div className=\"model-description-item\">\r\n            <h4>K-Nearest Neighbors (KNN)</h4>\r\n            <p>Classifies new cases based on a similarity measure to the K most similar training examples.</p>\r\n            <p>Simple to implement and naturally handles multi-class cases.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelComparisonPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}