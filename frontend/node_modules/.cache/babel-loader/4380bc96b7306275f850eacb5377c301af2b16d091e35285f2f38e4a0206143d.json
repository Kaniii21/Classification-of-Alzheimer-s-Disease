{"ast":null,"code":"import _objectSpread from\"D:/projects/Classification-of-Alzheimer-s-Disease/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./PredictionForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PredictionForm(_ref){let{addPrediction}=_ref;const navigate=useNavigate();const[formData,setFormData]=useState({age:'',gender:'M',educ:'',ses:'2',mmse:'',cdr:'0',etiv:'',nwbv:'',asf:''});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{// In a real application, you would send this data to your backend\n// For now, we'll simulate a response\nawait new Promise(resolve=>setTimeout(resolve,1000));// Mock prediction result\nconst mockPrediction={id:Math.floor(Math.random()*1000),timestamp:new Date().toISOString(),classification:Math.random()>0.7?'Nondemented':'Demented',confidence:0.75+Math.random()*0.2,model:'Random Forest',features:formData};// Add prediction to state\naddPrediction(mockPrediction);// Navigate to dashboard\nnavigate('/');}catch(err){setError('Error making prediction. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"prediction-form-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Make a New Prediction\"}),/*#__PURE__*/_jsx(\"p\",{className:\"form-description\",children:\"Enter patient data to predict Alzheimer's disease classification\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",children:\"Age\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"age\",name:\"age\",value:formData.age,onChange:handleChange,required:true,min:\"0\",max:\"120\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",children:\"Gender\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"gender\",name:\"gender\",value:formData.gender,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"M\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"F\",children:\"Female\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"educ\",children:\"Education (years)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"educ\",name:\"educ\",value:formData.educ,onChange:handleChange,required:true,min:\"0\",max:\"30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ses\",children:\"Socioeconomic Status\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"ses\",name:\"ses\",value:formData.ses,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"1 (Highest)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4\",children:\"4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"5 (Lowest)\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mmse\",children:\"MMSE Score\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"mmse\",name:\"mmse\",value:formData.mmse,onChange:handleChange,required:true,min:\"0\",max:\"30\"}),/*#__PURE__*/_jsx(\"small\",{className:\"help-text\",children:\"Mini-Mental State Examination (0-30)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cdr\",children:\"CDR\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"cdr\",name:\"cdr\",value:formData.cdr,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"0 (Normal)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0.5\",children:\"0.5 (Very Mild Dementia)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"1 (Mild Dementia)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"2 (Moderate Dementia)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"3 (Severe Dementia)\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"help-text\",children:\"Clinical Dementia Rating\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"etiv\",children:\"eTIV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"etiv\",name:\"etiv\",value:formData.etiv,onChange:handleChange,required:true,min:\"1000\",max:\"2500\",step:\"0.01\"}),/*#__PURE__*/_jsx(\"small\",{className:\"help-text\",children:\"Estimated Total Intracranial Volume (mm\\xB3)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nwbv\",children:\"nWBV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"nwbv\",name:\"nwbv\",value:formData.nwbv,onChange:handleChange,required:true,min:\"0.5\",max:\"1\",step:\"0.001\"}),/*#__PURE__*/_jsx(\"small\",{className:\"help-text\",children:\"Normalized Whole Brain Volume\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"asf\",children:\"ASF\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"asf\",name:\"asf\",value:formData.asf,onChange:handleChange,required:true,min:\"0.5\",max:\"2\",step:\"0.001\"}),/*#__PURE__*/_jsx(\"small\",{className:\"help-text\",children:\"Atlas Scaling Factor\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>navigate('/'),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?'Making Prediction...':'Make Prediction'})]})]})]})});}export default PredictionForm;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","PredictionForm","_ref","addPrediction","navigate","formData","setFormData","age","gender","educ","ses","mmse","cdr","etiv","nwbv","asf","loading","setLoading","error","setError","handleChange","e","name","value","target","_objectSpread","handleSubmit","preventDefault","Promise","resolve","setTimeout","mockPrediction","id","Math","floor","random","timestamp","Date","toISOString","classification","confidence","model","features","err","className","children","onSubmit","htmlFor","type","onChange","required","min","max","step","onClick","disabled"],"sources":["D:/projects/Classification-of-Alzheimer-s-Disease/frontend/src/components/PredictionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PredictionForm.css';\r\n\r\nfunction PredictionForm({ addPrediction }) {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    age: '',\r\n    gender: 'M',\r\n    educ: '',\r\n    ses: '2',\r\n    mmse: '',\r\n    cdr: '0',\r\n    etiv: '',\r\n    nwbv: '',\r\n    asf: ''\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // In a real application, you would send this data to your backend\r\n      // For now, we'll simulate a response\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock prediction result\r\n      const mockPrediction = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        timestamp: new Date().toISOString(),\r\n        classification: Math.random() > 0.7 ? 'Nondemented' : 'Demented',\r\n        confidence: 0.75 + (Math.random() * 0.2),\r\n        model: 'Random Forest',\r\n        features: formData\r\n      };\r\n      \r\n      // Add prediction to state\r\n      addPrediction(mockPrediction);\r\n      \r\n      // Navigate to dashboard\r\n      navigate('/');\r\n    } catch (err) {\r\n      setError('Error making prediction. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"prediction-form-container\">\r\n      <div className=\"card\">\r\n        <h2>Make a New Prediction</h2>\r\n        <p className=\"form-description\">\r\n          Enter patient data to predict Alzheimer's disease classification\r\n        </p>\r\n        \r\n        {error && (\r\n          <div className=\"alert alert-danger\">{error}</div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"age\"\r\n                name=\"age\"\r\n                value={formData.age}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"0\"\r\n                max=\"120\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"gender\">Gender</label>\r\n              <select\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                value={formData.gender}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"M\">Male</option>\r\n                <option value=\"F\">Female</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"educ\">Education (years)</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"educ\"\r\n                name=\"educ\"\r\n                value={formData.educ}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"0\"\r\n                max=\"30\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ses\">Socioeconomic Status</label>\r\n              <select\r\n                id=\"ses\"\r\n                name=\"ses\"\r\n                value={formData.ses}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"1\">1 (Highest)</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5 (Lowest)</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mmse\">MMSE Score</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"mmse\"\r\n                name=\"mmse\"\r\n                value={formData.mmse}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"0\"\r\n                max=\"30\"\r\n              />\r\n              <small className=\"help-text\">Mini-Mental State Examination (0-30)</small>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cdr\">CDR</label>\r\n              <select\r\n                id=\"cdr\"\r\n                name=\"cdr\"\r\n                value={formData.cdr}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"0\">0 (Normal)</option>\r\n                <option value=\"0.5\">0.5 (Very Mild Dementia)</option>\r\n                <option value=\"1\">1 (Mild Dementia)</option>\r\n                <option value=\"2\">2 (Moderate Dementia)</option>\r\n                <option value=\"3\">3 (Severe Dementia)</option>\r\n              </select>\r\n              <small className=\"help-text\">Clinical Dementia Rating</small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"etiv\">eTIV</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"etiv\"\r\n                name=\"etiv\"\r\n                value={formData.etiv}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"1000\"\r\n                max=\"2500\"\r\n                step=\"0.01\"\r\n              />\r\n              <small className=\"help-text\">Estimated Total Intracranial Volume (mm³)</small>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nwbv\">nWBV</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"nwbv\"\r\n                name=\"nwbv\"\r\n                value={formData.nwbv}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"0.5\"\r\n                max=\"1\"\r\n                step=\"0.001\"\r\n              />\r\n              <small className=\"help-text\">Normalized Whole Brain Volume</small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"asf\">ASF</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"asf\"\r\n                name=\"asf\"\r\n                value={formData.asf}\r\n                onChange={handleChange}\r\n                required\r\n                min=\"0.5\"\r\n                max=\"2\"\r\n                step=\"0.001\"\r\n              />\r\n              <small className=\"help-text\">Atlas Scaling Factor</small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-buttons\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-secondary\"\r\n              onClick={() => navigate('/')}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn btn-primary\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Making Prediction...' : 'Make Prediction'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PredictionForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}